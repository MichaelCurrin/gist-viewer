{"id":0,"name":"@webcontainer/api","kind":1,"kindString":"Project","flags":{},"comment":{"summary":[{"kind":"text","text":"The WebContainer Public API allows you build custom applications on top of an in-browser Node.js runtime.\n\nIts main entrypoint is the "},{"kind":"inline-tag","tag":"@link","text":"WebContainer","target":1},{"kind":"text","text":" class."}]},"originalName":"","children":[{"id":1,"name":"WebContainer","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"The main export of this library. An instance of "},{"kind":"code","text":"`WebContainer`"},{"kind":"text","text":" represents a runtime\nready to be used."}]},"children":[{"id":15,"name":"_tornDown","kind":1024,"kindString":"Property","flags":{"isPrivate":true},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"},{"id":14,"name":"fs","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Gives access to the underlying file system."}]},"type":{"type":"reference","id":78,"name":"FileSystemAPI"}},{"id":2,"name":"_instance","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isStatic":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":1,"name":"WebContainer"}]},"defaultValue":"null"},{"id":45,"name":"path","kind":262144,"kindString":"Accessor","flags":{},"getSignature":{"id":46,"name":"path","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[{"kind":"text","text":"The default value of the "},{"kind":"code","text":"`PATH`"},{"kind":"text","text":" environment variable for processes started through "},{"kind":"inline-tag","tag":"@link","text":"spawn","target":21},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}}},{"id":47,"name":"workdir","kind":262144,"kindString":"Accessor","flags":{},"getSignature":{"id":48,"name":"workdir","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[{"kind":"text","text":"The full path to the working directory (see "},{"kind":"inline-tag","tag":"@link","text":"FileSystemAPI","target":78},{"kind":"text","text":")."}]},"type":{"type":"intrinsic","name":"string"}}},{"id":39,"name":"mount","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":40,"name":"mount","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Mounts a tree of files into the filesystem."}]},"parameters":[{"id":41,"name":"snapshotOrTree","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"A tree of files, or a binary snapshot. Note that binary payloads will be transferred."}]},"type":{"type":"union","types":[{"type":"reference","id":190,"name":"FileSystemTree"},{"type":"reference","name":"Uint8Array","qualifiedName":"Uint8Array","package":"typescript"}]}},{"id":42,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"id":43,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":44,"name":"mountPoint","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specifies a nested path where the tree should be mounted."}]},"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[44]}]}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":29,"name":"on","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":30,"name":"on","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listens for "},{"kind":"code","text":"`'port'`"},{"kind":"text","text":" events, which are emitted when a port is opened or closed by some process."}]},"parameters":[{"id":31,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"port"}},{"id":32,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":54,"name":"PortListener"}}],"type":{"type":"reference","id":180,"name":"Unsubscribe"}},{"id":33,"name":"on","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listens for "},{"kind":"code","text":"`'server-ready'`"},{"kind":"text","text":" events, emitted when a running server is listening for incoming\nconnections and ready to answer requests."}]},"parameters":[{"id":34,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"server-ready"}},{"id":35,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":60,"name":"ServerReadyListener"}}],"type":{"type":"reference","id":180,"name":"Unsubscribe"}},{"id":36,"name":"on","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listens for "},{"kind":"code","text":"`'error'`"},{"kind":"text","text":" events, emitted when an internal error is triggered."}]},"parameters":[{"id":37,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"error"}},{"id":38,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":65,"name":"ErrorListener"}}],"type":{"type":"reference","id":180,"name":"Unsubscribe"}}]},{"id":21,"name":"spawn","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":22,"name":"spawn","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Spawns a process."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```\nconst install = await webcontainer.spawn('npm', ['i']);\n```"}]}]},"parameters":[{"id":23,"name":"command","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The program to be executed."}]},"type":{"type":"intrinsic","name":"string"}},{"id":24,"name":"args","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The command-line arguments for the program."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":25,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":173,"name":"SpawnOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":161,"name":"WebContainerProcess"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}},{"id":26,"name":"spawn","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Spawns a process without command-line arguments."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```\nconst install = await webcontainer.spawn('yarn');\n```"}]}]},"parameters":[{"id":27,"name":"command","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The program to be executed."}]},"type":{"type":"intrinsic","name":"string"}},{"id":28,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":173,"name":"SpawnOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":161,"name":"WebContainerProcess"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":49,"name":"teardown","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":50,"name":"teardown","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Destroys the WebContainer instance, turning it unusable, and releases its resources. After this,\na new WebContainer instance can be obtained by calling "},{"kind":"inline-tag","tag":"@link","text":"`boot`","target":3},{"kind":"text","text":".\n\nAll entities derived from this instance (e.g. processes, the file system, etc.) also become unusable\nafter calling this method."}]},"type":{"type":"intrinsic","name":"void"}}]},{"id":3,"name":"boot","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"id":4,"name":"boot","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Boots a WebContainer. Only a single instance of WebContainer can be booted concurrently (see "},{"kind":"inline-tag","tag":"@link","text":"`teardown`","target":49},{"kind":"text","text":").\n\nBooting WebContainer is an expensive operation."}]},"parameters":[{"id":5,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":51,"name":"BootOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1,"name":"WebContainer"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Properties","children":[15,14,2]},{"title":"Accessors","children":[45,47]},{"title":"Methods","children":[39,29,21,49,3]}]},{"id":51,"name":"BootOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":52,"name":"coep","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The value of the "},{"kind":"inline-tag","tag":"@link","text":"COEP","target":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Embedder-Policy"},{"kind":"text","text":" header\nused to load your application.\n\nChoosing 'none' will result in no cross-origin isolation headers being used. This will only work on Chromium-based\nbrowsers as long as an Origin Trial is supported.\n\nThis value is fixed the first time a WebContainer is booted, and cannot be changed in successive reboots.\n\nFor more info about cross-origin isolation, see our "},{"kind":"inline-tag","tag":"@link","text":"docs","target":"https://webcontainers.io/guides/quickstart"},{"kind":"text","text":"."}]},"type":{"type":"union","types":[{"type":"literal","value":"require-corp"},{"type":"literal","value":"credentialless"},{"type":"literal","value":"none"}]}},{"id":53,"name":"workdirName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Sets the _folder name_ for the working directory of your WebContainer instance (see "},{"kind":"inline-tag","tag":"@link","text":"FileSystemAPI","target":78},{"kind":"text","text":").\nIf not provided, it will be auto-generated.\n\nThis is mostly a \"cosmetic\" option."}]},"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[52,53]}]},{"id":71,"name":"DirEnt","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"A representation of a directory entry,\nsee "},{"kind":"inline-tag","tag":"@link","text":"the Node.js API","target":"https://nodejs.org/dist/latest-v16.x/docs/api/fs.html#class-fsdirent"},{"kind":"text","text":"."}]},"children":[{"id":72,"name":"name","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","id":77,"name":"T"}},{"id":75,"name":"isDirectory","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":76,"name":"isDirectory","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"boolean"}}]},{"id":73,"name":"isFile","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":74,"name":"isFile","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"boolean"}}]}],"groups":[{"title":"Properties","children":[72]},{"title":"Methods","children":[75,73]}],"typeParameters":[{"id":77,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}]},{"id":184,"name":"DirectoryNode","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Represents a directory, see "},{"kind":"inline-tag","tag":"@link","text":"FileSystemTree","target":190},{"kind":"text","text":"."}]},"children":[{"id":185,"name":"directory","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","id":190,"name":"FileSystemTree"}}],"groups":[{"title":"Properties","children":[185]}]},{"id":186,"name":"FileNode","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Represents a file, see "},{"kind":"inline-tag","tag":"@link","text":"FileSystemTree","target":190},{"kind":"text","text":"."}]},"children":[{"id":187,"name":"file","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reflection","declaration":{"id":188,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":189,"name":"contents","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The contents of the file, either as a UTF-8 string or as raw binary."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Uint8Array","qualifiedName":"Uint8Array","package":"typescript"}]}}],"groups":[{"title":"Properties","children":[189]}]}}}],"groups":[{"title":"Properties","children":[187]}]},{"id":78,"name":"FileSystemAPI","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Interface to interact directly with the WebContainer filesystem. Modeled after\n"},{"kind":"inline-tag","tag":"@link","text":"`fs.promises`","target":"https://nodejs.org/dist/latest-v16.x/docs/api/fs.html#promises-api"},{"kind":"text","text":" in Node.\n\nFile system operations exposed here are scoped to the working directory: a given folder predetermined at boot time.\nAll paths are resolved with respect to this working directory."}]},"children":[{"id":118,"name":"mkdir","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":119,"name":"mkdir","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":120,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":121,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"id":122,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":123,"name":"recursive","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"literal","value":false}}],"groups":[{"title":"Properties","children":[123]}]}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}},{"id":124,"name":"mkdir","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":125,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":126,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":127,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":128,"name":"recursive","kind":1024,"kindString":"Property","flags":{},"type":{"type":"literal","value":true}}],"groups":[{"title":"Properties","children":[128]}]}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":104,"name":"readFile","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":105,"name":"readFile","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":106,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":107,"name":"encoding","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"literal","value":null}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Uint8Array","qualifiedName":"Uint8Array","package":"typescript"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}},{"id":108,"name":"readFile","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":109,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":110,"name":"encoding","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":183,"name":"BufferEncoding"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":79,"name":"readdir","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":80,"name":"readdir","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":81,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":82,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":"buffer"},{"type":"reflection","declaration":{"id":83,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":84,"name":"encoding","kind":1024,"kindString":"Property","flags":{},"type":{"type":"literal","value":"buffer"}},{"id":85,"name":"withFileTypes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"literal","value":false}}],"groups":[{"title":"Properties","children":[84,85]}]}}]}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Uint8Array","qualifiedName":"Uint8Array","package":"typescript"}}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}},{"id":86,"name":"readdir","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":87,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":88,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":89,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":90,"name":"encoding","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":183,"name":"BufferEncoding"}]}},{"id":91,"name":"withFileTypes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"literal","value":false}}],"groups":[{"title":"Properties","children":[90,91]}]}},{"type":"reference","id":183,"name":"BufferEncoding"}]}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}},{"id":92,"name":"readdir","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":93,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":94,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":95,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":96,"name":"encoding","kind":1024,"kindString":"Property","flags":{},"type":{"type":"literal","value":"buffer"}},{"id":97,"name":"withFileTypes","kind":1024,"kindString":"Property","flags":{},"type":{"type":"literal","value":true}}],"groups":[{"title":"Properties","children":[96,97]}]}}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":71,"typeArguments":[{"type":"reference","name":"Uint8Array","qualifiedName":"Uint8Array","package":"typescript"}],"name":"DirEnt"}}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}},{"id":98,"name":"readdir","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":99,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":100,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":101,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":102,"name":"encoding","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":183,"name":"BufferEncoding"}]}},{"id":103,"name":"withFileTypes","kind":1024,"kindString":"Property","flags":{},"type":{"type":"literal","value":true}}],"groups":[{"title":"Properties","children":[102,103]}]}}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":71,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"DirEnt"}}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":136,"name":"rename","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":137,"name":"rename","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":138,"name":"oldPath","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":139,"name":"newPath","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":129,"name":"rm","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":130,"name":"rm","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":131,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":132,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"id":133,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":134,"name":"force","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"id":135,"name":"recursive","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[134,135]}]}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":140,"name":"watch","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":141,"name":"watch","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":142,"name":"filename","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":143,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":151,"name":"FSWatchOptions"}},{"id":144,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":156,"name":"FSWatchCallback"}}],"type":{"type":"reference","id":148,"name":"IFSWatcher"}},{"id":145,"name":"watch","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":146,"name":"filename","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":147,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":156,"name":"FSWatchCallback"}}],"type":{"type":"reference","id":148,"name":"IFSWatcher"}}]},{"id":111,"name":"writeFile","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":112,"name":"writeFile","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":113,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":114,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Uint8Array","qualifiedName":"Uint8Array","package":"typescript"}]}},{"id":115,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":116,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":117,"name":"encoding","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"groups":[{"title":"Properties","children":[117]}]}}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Methods","children":[118,104,79,136,129,140,111]}]},{"id":190,"name":"FileSystemTree","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"A simple, tree-like structure to describe the contents of a folder to be mounted."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```\nconst tree = {\n  myproject: {\n    directory: {\n      'foo.js': {\n        file: {\n          contents: 'const x = 1;',\n        },\n      },\n      .envrc: {\n        file: {\n          contents: 'ENVIRONMENT=staging'\n        }\n      },\n    },\n  },\n  emptyFolder: {\n    directory: {}\n  },\n};\n```"}]}]},"indexSignature":{"id":191,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":192,"name":"name","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"reference","id":184,"name":"DirectoryNode"},{"type":"reference","id":186,"name":"FileNode"}]}}},{"id":148,"name":"IFSWatcher","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Interface for manipulating watching."}]},"children":[{"id":149,"name":"close","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":150,"name":"close","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[149]}]},{"id":173,"name":"SpawnOptions","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Options that control process spawning."}]},"children":[{"id":174,"name":"env","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Environment variables to set for the process."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"}]}],"name":"Record","qualifiedName":"Record","package":"typescript"}},{"id":175,"name":"output","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When set to false, no terminal output is sent back to the process,\nand the "},{"kind":"inline-tag","tag":"@link","text":"`output`","target":164},{"kind":"text","text":" stream will never produce any chunks."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":176,"name":"terminal","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The size of the attached terminal."}]},"type":{"type":"reflection","declaration":{"id":177,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":178,"name":"cols","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":179,"name":"rows","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[178,179]}]}}}],"groups":[{"title":"Properties","children":[174,175,176]}]},{"id":161,"name":"WebContainerProcess","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"A running process spawned in a "},{"kind":"inline-tag","tag":"@link","text":"WebContainer","target":1},{"kind":"text","text":"."}]},"children":[{"id":162,"name":"exit","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"A promise for the exit code of the process."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}},{"id":163,"name":"input","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"An input stream for the attached pseudoterminal device."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"WritableStream","qualifiedName":"WritableStream","package":"typescript"}},{"id":164,"name":"output","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"A stream that receives all terminal output, including the stdout and stderr emitted by the spawned process\n_and_ its descendants.\n\nCan be disabled by setting "},{"kind":"inline-tag","tag":"@link","text":"`output`","target":173},{"kind":"text","text":" to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"ReadableStream","qualifiedName":"ReadableStream","package":"typescript"}},{"id":165,"name":"kill","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":166,"name":"kill","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Kills the process."}]},"type":{"type":"intrinsic","name":"void"}}]},{"id":167,"name":"resize","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":168,"name":"resize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Resizes the attached terminal."}]},"parameters":[{"id":169,"name":"dimensions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":170,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":171,"name":"cols","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":172,"name":"rows","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[171,172]}]}}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Properties","children":[162,163,164]},{"title":"Methods","children":[165,167]}]},{"id":183,"name":"BufferEncoding","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"summary":[{"kind":"text","text":"Represents the character encoding options available for encoding and decoding data in Node.js buffers."}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Buffer Documentation","target":"https://nodejs.org/api/buffer.html#buffer_buffers_and_character_encodings|Node.js"}]}]},"type":{"type":"union","types":[{"type":"literal","value":"ascii"},{"type":"literal","value":"utf8"},{"type":"literal","value":"utf-8"},{"type":"literal","value":"utf16le"},{"type":"literal","value":"ucs2"},{"type":"literal","value":"ucs-2"},{"type":"literal","value":"base64"},{"type":"literal","value":"base64url"},{"type":"literal","value":"latin1"},{"type":"literal","value":"binary"},{"type":"literal","value":"hex"}]}},{"id":65,"name":"ErrorListener","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"id":66,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":67,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":68,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The emitted error."}]},"type":{"type":"reflection","declaration":{"id":69,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":70,"name":"message","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[70]}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":156,"name":"FSWatchCallback","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"id":157,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":158,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Callback triggered on watch events."}]},"parameters":[{"id":159,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":"rename"},{"type":"literal","value":"change"}]}},{"id":160,"name":"filename","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Buffer","qualifiedName":"global.Buffer","package":"@types/node"}]}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":151,"name":"FSWatchOptions","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"summary":[{"kind":"text","text":"Options for configuring fs.watch."}]},"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":152,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":153,"name":"encoding","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","id":183,"name":"BufferEncoding"},{"type":"literal","value":null}]}},{"id":154,"name":"persistent","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"id":155,"name":"recursive","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[153,154,155]}]}},{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"id":54,"name":"PortListener","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"id":55,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":56,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":57,"name":"port","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The port on which the server is listening."}]},"type":{"type":"intrinsic","name":"number"}},{"id":58,"name":"type","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The new status of the port."}]},"type":{"type":"union","types":[{"type":"literal","value":"open"},{"type":"literal","value":"close"}]}},{"id":59,"name":"url","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The url where the server can be accessed."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":60,"name":"ServerReadyListener","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"id":61,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":62,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":63,"name":"port","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The port on which the readied server is listening."}]},"type":{"type":"intrinsic","name":"number"}},{"id":64,"name":"url","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The url where the server can be accessed."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":180,"name":"Unsubscribe","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"id":181,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":182,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Classes","children":[1]},{"title":"Interfaces","children":[51,71,184,186,78,190,148,173,161]},{"title":"Type Aliases","children":[183,65,156,151,54,60,180]}]}